{"version":3,"sources":["actions/index.js","components/people/AddPerson.js","components/people/PersonList.js","components/people/People.js","App.js","reducers/index.js","store/index.js","index.js"],"names":["ADD_PERSON","REMOVE_PERSON","AddPerson","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","className","onSubmit","data","type","newPerson","firstName","lastName","age","parseInt","placeholder","required","PersonList","people","useSelector","state","map","person","index","onClick","deleteHandler","People","App","initialState","store","createStore","action","newPeople","filter","personIndex","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kNAAaA,EAAa,aACbC,EAAgB,gB,OCmEdC,EAhEG,WAAO,IAAD,EAMhBC,cAJAC,EAFgB,EAEhBA,SACAC,EAHgB,EAGhBA,aACAC,EAJgB,EAIhBA,MACaC,EALG,EAKhBC,UAAaD,OAGXE,EAAWC,cAkBjB,OACI,qBAAKC,UAAU,aAAf,SACI,uBAAMC,SAAUP,GAhBP,SAACQ,GACdJ,EAAS,CACLK,KAAMd,EACNe,UAAW,CACPC,UAAWH,EAAKG,UAChBC,SAAUJ,EAAKI,SACfC,IAAKC,SAASN,EAAKK,QAI3BZ,OAMI,UACI,mCACIQ,KAAK,OACLM,YAAY,oBACRhB,EAAS,YAAa,CACtBiB,UAAU,MAIjBd,EAAOS,WAAa,uBAAOL,UAAU,QAAjB,oCACrB,mCACIG,KAAK,OACLM,YAAY,mBACRhB,EAAS,WAAY,CACrBiB,UAAU,MAGjBd,EAAOU,UAAY,uBAAON,UAAU,QAAjB,mCACpB,mCACIG,KAAK,SACLM,YAAY,oBACRhB,EAAS,MAAO,CAChBiB,UAAU,MAGjBd,EAAOW,KAAO,uBAAOP,UAAU,QAAjB,6BAEf,uBACA,uBAEA,wBAAQG,KAAK,SAAb,sBCvBDQ,EApCI,WAEf,IAAMC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMF,UAEtCd,EAAWC,cAYjB,OACI,mCACI,oBAAIC,UAAU,aAAd,SACKY,GACGA,EAAOG,KAAI,SAACC,EAAQC,GAAT,OACP,qBAAgBjB,UAAU,kBAA1B,UACKgB,EAAOX,UADZ,IACwBW,EAAOV,SAD/B,KAC2CU,EAAOT,IADlD,IAEI,wBAAQW,QAAS,kBAfnB,SAACD,GACnBnB,EAAS,CACLK,KAAMb,EACN2B,MAAOA,IAYgCE,CAAcF,IAArC,iBAFKA,WCRlBG,EAbA,WAEX,OACI,qCACI,cAAC,EAAD,IAEA,cAAC,EAAD,QCEG,SAASC,IAEtB,OACE,qBAAKrB,UAAU,gBAAf,SACE,cAAC,EAAD,M,mBCJAsB,EAAe,CACjBV,OAVkB,CAClB,CACIP,UAAW,OACXC,SAAU,QACVC,IAAK,MCAEgB,EAFDC,aDYe,WAAmC,IAAlCV,EAAiC,uDAAzBQ,EAAcG,EAAW,uCAC3D,GAAIA,EAAOtB,OAASd,EAChB,OAAO,2BACAyB,GADP,IAEIF,OAAO,GAAD,mBAAME,EAAMF,QAAZ,CAAoBa,EAAOrB,cAKzC,GAAIqB,EAAOtB,OAASb,EAAe,CAE/B,IAAMoC,EAAYZ,EAAMF,OAAOe,QAC3B,SAACX,EAAQY,GAAT,OAAyBA,IAAgBH,EAAOR,SAGpD,OAAO,2BACAH,GADP,IAEIF,OAAQc,IAIhB,MAAO,CACHd,OAAQE,EAAMF,WEhChBiB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAACF,EAAD,MAEFQ,K","file":"static/js/main.260592a3.chunk.js","sourcesContent":["export const ADD_PERSON = 'ADD_PERSON';\r\nexport const REMOVE_PERSON = 'REMOVE_PERSON';","import { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ADD_PERSON } from \"../../actions\";\r\n\r\nconst AddPerson = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // Add new person\r\n    const onSubmit = (data) => {\r\n        dispatch({\r\n            type: ADD_PERSON,\r\n            newPerson: {\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                age: parseInt(data.age)\r\n            }\r\n        });\r\n\r\n        reset()\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"add-people\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter first name\"\r\n                    {...register(\"firstName\", {\r\n                        required: true\r\n                    })}\r\n                />\r\n\r\n                {errors.firstName && <small className=\"error\">First Name is required</small>}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter last name\"\r\n                    {...register(\"lastName\", {\r\n                        required: true\r\n                    })}\r\n                />\r\n                {errors.lastName && <small className=\"error\">Last Name is required</small>}\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"How old you are?\"\r\n                    {...register(\"age\", {\r\n                        required: true\r\n                    })}\r\n                />\r\n                {errors.age && <small className=\"error\">Age is required</small>}\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <button type=\"submit\">OK</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPerson;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { REMOVE_PERSON } from \"../../actions\";\r\n\r\nconst PersonList = () => {\r\n    // select people\r\n    const people = useSelector((state) => state.people);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    // Delete a person\r\n    const deleteHandler = (index) => {\r\n        dispatch({\r\n            type: REMOVE_PERSON,\r\n            index: index\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"list-group\">\r\n                {people &&\r\n                    people.map((person, index) => (\r\n                        <li key={index} className=\"list-group-item\">\r\n                            {person.firstName} {person.lastName} ({person.age})\r\n                            <button onClick={() => deleteHandler(index)}>X</button>\r\n                        </li>\r\n                    ))\r\n\r\n                }\r\n            </ul>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PersonList;","import AddPerson from \"./AddPerson\";\r\nimport PersonList from \"./PersonList\";\r\n\r\nconst People = () => {\r\n\r\n    return (\r\n        <>\r\n            <AddPerson />\r\n\r\n            <PersonList />\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default People;","import React from \"react\";\nimport \"./styles.css\";\nimport People from \"./components/people/People\";\n\n// use redux (define store and reducer)\n// render list of people like in example div\n// make form: frst name, last name, age\n// after pressing OK button you should dispatch action ad add new person to list\n// after pressing X you should remove person from the list\n// *BONUS: Make validation of the form before accepting new person first\n\nexport default function App() {\n\n  return (\n    <div className=\"App container\">\n      <People />\n    </div>\n  );\n}\n","import { ADD_PERSON, REMOVE_PERSON } from \"../actions\";\r\n\r\nconst initialPeople = [\r\n    {\r\n        firstName: \"John\",\r\n        lastName: \"Smith\",\r\n        age: 44\r\n    }\r\n];\r\n\r\n// initial state\r\nconst initialState = {\r\n    people: initialPeople\r\n};\r\n\r\n// People reducer\r\nexport const peopleReducer = (state = initialState, action) => {\r\n    if (action.type === ADD_PERSON) {\r\n        return {\r\n            ...state,\r\n            people: [...state.people, action.newPerson]\r\n        };\r\n    }\r\n\r\n    // REMOVE Action\r\n    if (action.type === REMOVE_PERSON) {\r\n        // Remove selected person\r\n        const newPeople = state.people.filter(\r\n            (person, personIndex) => personIndex !== action.index\r\n        );\r\n\r\n        return {\r\n            ...state,\r\n            people: newPeople\r\n        };\r\n    }\r\n\r\n    return {\r\n        people: state.people\r\n    };\r\n};","import { createStore } from \"redux\";\r\nimport { peopleReducer } from \"../reducers\";\r\n\r\n// store\r\nconst store = createStore(peopleReducer);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);"],"sourceRoot":""}